View(df)
df <- na.omit(df)
removeBadPoints<-function(data){
data.column2 = data[,2]
data.column2[data.column2 < 0] = NA
data.column2[data.column2 > 100] = NA
data[,2] = data.column2
data <- na.omit(data)
return(data)
}
df <- read.table(file.path(FILE.PATH, FILE.NAME), skip = 14)
df <- removeBadPoints(df)
tail(df)
getTable <- function(fname){
df <- read.table(file.path(FILE.PATH, fname), skip = 14)
df <- removeBadPoints(df)
return(df)
}
getTable <- function(fname){
df <- read.table(file.path(FILE.PATH, fname), skip = 14)
df <- removeBadPoints(df)
return(df)
}
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
FILE.NAME.R = "Reflection_12-39-45-210.txt"
FILE.NAME.T = "Transmission_12-39-43-438.txt"
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = max(df.r[1,1], df.t[1,1])
WL.END = min(df.r[nrow(df.r),1], df.t[nrow(df.t),1])
WL.START
WL.END
int(WL.START)
integer(WL.START)
as.integer(WL.START)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
seq(WL.START, WL.END)
getSmoothSpectral <- function(wl, spectral){
}
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
for(iwl in wl){
while(spectral[index,1] < iwl)
index = index + 1
c.t = c()
while(spectral[index,1] < iwl + 1){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
return(mean.spectral)
}
df.r <- getSmooth(WL, df.r)
df.r <- getSmoothSpectral(WL, df.r)
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
for(iwl in wl){
while(spectral[index, 1] < iwl)
index = index + 1
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
return(mean.spectral)
}
df.r <- getSmoothSpectral(WL, df.r)
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
while(spectral[index, 1] < iwl)
index = index + 1
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
spectral[1,1]
spectral[1,2]
spectral[1,3]
spectral[2,2]
spectral[2,1]
iwl = WL[1]
iwl
while(spectral[index, 1] < iwl)
for(iwl in wl){
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
for(i in c(1,3,4)){print(i)}
class(wk)
class(wl)
wl = WL
class(wl)
WL = seq(WL.START, WL.END)
class(WL)
WL
length(WL)
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
index
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
}
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while(spectral[index, 1] < (iwl + 1)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while(spectral[index, 1] < (iwl + 1) || index <= nrow(spectral)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) || index <= nrow(spectral)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
return(mean.spectral)
}
index = 1
mean.spectral = c()
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) || index <= nrow(spectral)){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
#iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) || (index <= nrow(spectral)) ){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
mean.spectral
iwl = WL[1]
while((spectral[index, 1] < (iwl + 1)) || (index <= nrow(spectral)) ){
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
index <= nrow(spectral))
(index <= nrow(spectral))
index
index = 1
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
print(iwl)
iwl = WL[1]
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) && (index <= nrow(spectral)) ){
print(index)
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
mean.spectral
WL
for(iwl in wl){print(iwl)}
index = 1
mean.spectral = c()
wl = WL
spectral = df.r
for(iwl in wl){
#print(iwl)
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) && (index <= nrow(spectral)) ){
print(index)
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
mean.spectral
length(wl)
(93 + 53)/2
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
for(iwl in wl){
#print(iwl)
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) && (index <= nrow(spectral)) ){
print(index)
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
print(paste0("finish:", iwl))
}
return(mean.spectral)
}
FILE.NAME.R = "Reflection_12-39-45-210.txt"
FILE.NAME.T = "Transmission_12-39-43-438.txt"
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r)
df.t <- getSmoothSpectral(WL, df.t)
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
for(iwl in wl){
#print(iwl)
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) && (index <= nrow(spectral)) ){
#print(index)
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
#print(paste0("finish:", iwl))
}
return(mean.spectral)
}
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r)
df.t <- getSmoothSpectral(WL, df.t)
nrow(WL)
length(WL)
length(df.r)
length(df.t)
write.table(WL, "wl")
write.table(df.r, "Reflectance")
write.table(df.t, "Transmittance")
write.table(WL, "wl.txt")
write.table(df.r, "Reflectance.txt")
write.table(df.t, "Transmittance.txt")
write.table(as.array(WL), "wl.txt")
write.table(as.data.frame(WL), "wl.txt")
write(as.data.frame(WL), "wl.txt")
WL = as.array(seq(WL.START, WL.END))
WL
length(WL
)
write.table(WL, "wl.txt")
write.table(WL, "wl.txt")
write.table(WL[,2], "wl.txt")
class(WL)
WL[1]
WL[2]
WL = as.array(seq(WL.START, WL.END))
df.r <- getSmoothSpectral(WL, df.r)
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r)
df.t <- getSmoothSpectral(WL, df.t)
df.r <- getSmoothSpectral(WL, df.r)
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r)
df.t <- getSmoothSpectral(WL, df.t)
write.table(as.data.frame(WL)[2], "wl.txt")
write.table(as.data.frame(WL)[,2], "wl.txt")
as.data.frame(WL)
?write.table
write.table(as.data.frame(WL), "wl.txt", row.names = FALSE)
write.table(WL, "wl.txt", row.names = FALSE)
write.table(WL, "wl.txt", row.names = FALSE, col.names = FALSE)
WL.START
FILE.NAME.R = "Reflection_12-39-45-210.txt"
FILE.NAME.T = "Transmission_12-39-43-438.txt"
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r)
df.t <- getSmoothSpectral(WL, df.t)
#length(WL)
# length(df.r)
# length(df.t)
write.table(WL, "wl.txt", row.names = FALSE, col.names = FALSE)
write.table(df.r, "Reflectance.txt", row.names = FALSE, col.names = FALSE)
write.table(df.t, "Transmittance.txt", row.names = FALSE, col.names = FALSE)
df <- data.frame(WL, df.r)
plot(df)
df <- data.frame(WL, df.t)
plot(df)
# Sort of reflectence and transmittance from ocean optics.
# remove bad points. >100 & <0
# cal the mean in between 2 WL (integer).
# output WL.txt, reflectance.txt, transmisttance.txt
FILE.PATH = "C:\\Users\\12442063\\Google_Drive\\Share_with_MAC\\PhD_Studies\\Model_work\\Fluspect_Retrievel\\data\\measured"
DIR.OUT = FILE.PATH
setwd(FILE.PATH)
removeBadPoints <- function(data){
data.column2 = data[,2]
data.column2[data.column2 < 0] = NA
data.column2[data.column2 > 100] = NA
data[,2] = data.column2
data <- na.omit(data)
return(data)
}
getTable <- function(fname){
df <- read.table(file.path(FILE.PATH, fname), skip = 14)
df <- removeBadPoints(df)
return(df)
}
getSmoothSpectral <- function(wl, spectral){
index = 1
mean.spectral = c()
for(iwl in wl){
#print(iwl)
while(spectral[index, 1] < iwl){
index = index + 1
}
c.t = c()
while((spectral[index, 1] < (iwl + 1)) && (index <= nrow(spectral)) ){
#print(index)
c.t <- append(c.t, spectral[index, 2])
index = index + 1
}
mean.spectral <- append(mean.spectral, mean(c.t))
#print(paste0("finish:", iwl))
}
return(mean.spectral)
}
FILE.NAME.R = "Reflection_12-39-45-210.txt"
FILE.NAME.T = "Transmission_12-39-43-438.txt"
df.r <- getTable(FILE.NAME.R)
df.t <- getTable(FILE.NAME.T)
WL.START = as.integer(max(df.r[1,1], df.t[1,1]))
WL.END = as.integer(min(df.r[nrow(df.r),1], df.t[nrow(df.t),1]))
WL = seq(WL.START, WL.END)
df.r <- getSmoothSpectral(WL, df.r) / 100.0
df.t <- getSmoothSpectral(WL, df.t) / 100.0
#length(WL)
# length(df.r)
# length(df.t)
write.table(WL, "wl.txt", row.names = FALSE, col.names = FALSE)
write.table(df.r, "Reflectance.txt", row.names = FALSE, col.names = FALSE)
write.table(df.t, "Transmittance.txt", row.names = FALSE, col.names = FALSE)
df <- data.frame(WL, df.t)
plot(df)
df <- data.frame(WL, df.r, df.t)
df
df <- data.frame(WL, df.r, df.t)
df.spectral <- subset(df, df[1,] >=400 && df[1,] <=1000)
head(df.spectral)
colnames(df) <- c("WL", "R", "T")
df <- data.frame(WL, df.r, df.t)
colnames(df) <- c("WL", "R", "T")
df.spectral <- subset(df, df$WL >=400 && df$WL <=1000)
head(df.spectral)
head(df)
class(df$WL)
df.spectral <- subset(df, df$WL >=400 & df$WL <=1000)
head(df.spectral)
write.table(df.spectral$WL, "wl.txt", row.names = FALSE, col.names = FALSE)
write.table(df.spectral$R, "Reflectance.txt", row.names = FALSE, col.names = FALSE)
write.table(df.spectral$T, "Transmittance.txt", row.names = FALSE, col.names = FALSE)
library(ggplot2)
ggplot(df.spectral) <-
geom_line(df.spectral$WL, df.spectral$R)
ggplot(df.spectral) <-
geom_line(aes(x = WL, y = R))
ggplot(data = df.spectral) <-
geom_line(aes(x = WL, y = R))
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = R))
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = R), color = red)
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = R), color = "red")
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T), color = "blue")
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T), color = "blue", size = 0.5)
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T, size = 0.5), color = "blue")
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T, size = 0.1), color = "blue")
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T, size = 0.01), color = "blue")
ggplot(data = df.spectral) +
geom_line(aes(x = WL, y = T), color = "blue")
